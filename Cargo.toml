[workspace]
members = [
    "crankshaft",
    "crankshaft-config",
    "crankshaft-console",
    "crankshaft-docker",
    "crankshaft-engine",
    "crankshaft-events",
    "crankshaft-monitor",
    "examples",
]
resolver = "2"

[workspace.package]
license = "MIT OR Apache-2.0"
edition = "2021"
authors = ["The Rust WDL project developers"]
homepage = "https://github.com/stjude-rust-labs/crankshaft"
repository = "https://github.com/stjude-rust-labs/crankshaft"
rust-version = "1.83.0"

[workspace.dependencies]
anyhow = "1.0.99"
approx = "0.5.1"
async-stream = "0.3.6"
async-trait = "0.1.89"
base64 = "0.22"
bollard = "0.19.2"
bon = "3.7.1"
bytes = "1.10.1"
clap = { version = "4.5.45", features = ["derive"] }
clap-verbosity-flag = "3.0.4"
color-eyre = { version = "0.6", features = ["issue-url"] }
config = "0.15.14"
crossterm = { version = "0.29.0", features = ["event-stream"] }
dirs = "6.0.0"
futures = "0.3.31"
futures-core = "0.3.31"
futures-util = "0.3.31"
growable-bloom-filter = "2.1.1"
indexmap = { version = "2.11.0", features = ["serde"] }
indicatif = "0.18.0"
nix = { version = "0.30.1", default-features = false, features = ["user"] }
nonempty = "0.12.0"
prost = "0.14.1"
prost-types = "0.14.1"
rand = "0.9.2"
ratatui = { version = "0.29.0", default-features = false, features = [
    "crossterm",
] }
regex = "1.11.1"
serde = { version = "1.0.219", features = ["derive"] }
serde_yaml = "0.9"
shlex = "1.3.0"
ssh2 = "0.9.5"
tar = "0.4.44"
tempfile = "3.21.0"
tes = { version = "0.9.0", features = ["client", "serde"] }
thiserror = "2.0.16"
tokio = { version = "1.47.1", features = ["full", "time", "tracing"] }
tokio-metrics = "0.4.4"
tokio-retry2 = "0.5.7"
tokio-stream = "0.1.17"
tokio-util = "0.7.16"
toml = "0.9.5"
tonic = "0.14.1"
tonic-prost = "0.14.1"
tonic-prost-build = "0.14.1"
tracing = "0.1.41"
tracing-log = "0.2.0"
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }
url = { version = "2.5.6", features = ["serde"] }
uuid = { version = "1.18.0", features = [
    "v4",
    "fast-rng",
    "macro-diagnostics",
] }
whoami = "1.6.1"

[workspace.lints.rust]
missing_docs = "warn"
nonstandard-style = "warn"
rust-2018-idioms = "warn"
rust-2021-compatibility = "warn"
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(tokio_unstable)'] }

# Re-enable this lint and remove the group expansion lints after auditing remaining diagnostics as we get closer to the 2024 release
# rust-2024-compatibility = "warn"
# <expansion>
boxed-slice-into-iter = "warn"
dependency-on-unit-never-type-fallback = "warn"
deprecated-safe-2024 = "warn"
edition-2024-expr-fragment-specifier = "allow"        # Reason: the few macros where we use the `expr` fragment will not break with the new expressions
if-let-rescope = "allow"                              # Reason: lint is too noisy and we are unlikely to have drop order dependencies
impl-trait-overcaptures = "warn"
keyword-idents-2024 = "warn"
missing-unsafe-on-extern = "warn"
never-type-fallback-flowing-into-unsafe = "warn"
rust-2024-guarded-string-incompatible-syntax = "warn"
rust-2024-incompatible-pat = "warn"
rust-2024-prelude-collisions = "warn"
static-mut-refs = "warn"
tail-expr-drop-order = "allow"                        # Reason: lint is too noisy and we are unlikely to have drop order dependencies
unsafe-attr-outside-unsafe = "warn"
unsafe-op-in-unsafe-fn = "warn"
# </expansion>

[workspace.lints.rustdoc]
broken_intra_doc_links = "warn"

[workspace.lints.clippy]
missing_docs_in_private_items = "warn"
